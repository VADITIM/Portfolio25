@font-face { font-family: "Wosker"; src: url('../assets/fonts/Wosker.otf') format('opentype'); }
@font-face { font-family: "DT"; src: url('../assets/fonts/DTGetaiGroteskDisplay-Black.ttf');}
@font-face { font-family: "Vague"; src: url('../assets/fonts/nouvelle_vague_final.ttf') format('truetype'); }
@font-face { font-family: "Mono"; src: url('../assets/fonts/SpaceMono-Regular.ttf') format('truetype'); }
@font-face { font-family: "Cutive"; src: url('../assets/fonts/CutiveMono.ttf') format('truetype'); }
@font-face { font-family: "Think"; src: url('../assets/fonts/Think.ttf') format('truetype'); }
@font-face { font-family: "Starlight"; src: url('../assets/fonts/Starlight\ demo.ttf') format('truetype'); }

$mobile: 435px; //360px
$tablet: 840px; //1200px
$tabletLandscape: 1200px; //1200px
$small-desktop: 1600px;
$large-desktop: 2000px;


@mixin allTablets {
  @media screen and (min-width: #{$mobile}) and (max-width: #{$tabletLandscape}) {
    @content;
  }}

@mixin mobile {
  @media screen and (max-width: #{$mobile}) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: #{$mobile}) and (max-width: #{$tablet}) {
    @content;
  }
}

@mixin tabletLandscape {
  @media screen and (min-width: #{$tablet}) and (max-width: #{$tabletLandscape}) {
    @content;
  }
}

@mixin smallDesktop {
  @media screen and (min-width: #{$tabletLandscape}) and (max-width: #{$small-desktop}) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: #{$small-desktop}) {
    @content;
  }
}

@mixin largeDesktop {
  @media screen and (min-width: #{$large-desktop}) {
    @content;
  }
}

@mixin allDesktops {
  @media screen and (min-width: #{$tabletLandscape}) {
    @content;
  }
}

$purple: #7e55dd;
$black: #414141;
$black2: #525252;
$blacktrans: #222222d8;
$yellow: rgb(255, 221, 28);

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin absoluteCenter($top: 50%, $left: 50%) {
  top: $top;
  left: $left;
  transform: translate(-50%, -50%);
}

@mixin flex($string1, $string2) {
  display: flex;
  justify-content: $string1;
  align-items: $string2;
}

.rotate-right {
  transform: rotateY(35deg);
}


@mixin rotate($angleX, $angleY, $angleZ ) {
  transform: rotateX(#{$angleX}deg) rotateY(#{$angleY}deg) rotateZ(#{$angleZ}deg);
}

@mixin threeDElement($depth: 25, $color: $purple) {
  $shadows: ();

  @for $i from 1 through $depth {
    $darkness: if($i <= 5, $i * 10%, 50%);
    $shadow: #{$i}px #{-$i}px 0 darken($color, $darkness);
    $shadows: append($shadows, $shadow, comma);
  }
  
  text-shadow: $shadows;
}